{"ast":null,"code":"var _jsxFileName = \"/home/bdburns/Git/Flask/blob-storage-ui/client/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [blobs, setBlobs] = useState([]);\n  useEffect(() => {\n    const fetchBlobs = async () => {\n      const result = await axios(\"/list\");\n      console.log(result.data.blobs);\n      setBlobs(result.data.blobs);\n    };\n\n    fetchBlobs();\n  }, []);\n\n  const downloadClick = () => {\n    console.log(\"hello\");\n    fetch(\"/download\") // Convert data into a 'blob'.\n    .then(res => res.blob()).then(blob => {\n      // Create blob link for download.\n      const url = window.URL.createObjectURL(new Blob([blob]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", \"hi.docx\"); // Append to html page.\n\n      document.body.appendChild(link); // Force download.\n\n      link.click(); // Clean up and remove link from dom.\n\n      link.parentNode.removeChild(link);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, blobs.length > 0 && blobs.map(blob => /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 48\n    }\n  }, blob)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: downloadClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Download File\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/bdburns/Git/Flask/blob-storage-ui/client/src/App.js"],"names":["React","useState","useEffect","axios","App","blobs","setBlobs","fetchBlobs","result","console","log","data","downloadClick","fetch","then","res","blob","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","parentNode","removeChild","length","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,UAAU,GAAG,YAAY;AAC7B,YAAMC,MAAM,GAAG,MAAML,KAAK,CAAC,OAAD,CAA1B;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAP,CAAYN,KAAxB;AACAC,MAAAA,QAAQ,CAACE,MAAM,CAACG,IAAP,CAAYN,KAAb,CAAR;AACD,KAJD;;AAKAE,IAAAA,UAAU;AACX,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMK,aAAa,GAAG,MAAM;AAC1BH,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAG,IAAAA,KAAK,CAAC,WAAD,CAAL,CACE;AADF,KAEGC,IAFH,CAESC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFjB,EAGGF,IAHH,CAGSE,IAAD,IAAU;AACd;AACA,YAAMC,GAAG,GAAGC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2B,IAAIC,IAAJ,CAAS,CAACL,IAAD,CAAT,CAA3B,CAAZ;AACA,YAAMM,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb;AACAF,MAAAA,IAAI,CAACG,IAAL,GAAYR,GAAZ;AACAK,MAAAA,IAAI,CAACI,YAAL,CAAkB,UAAlB,EAA8B,SAA9B,EALc,CAOd;;AACAH,MAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BN,IAA1B,EARc,CAUd;;AACAA,MAAAA,IAAI,CAACO,KAAL,GAXc,CAad;;AACAP,MAAAA,IAAI,CAACQ,UAAL,CAAgBC,WAAhB,CAA4BT,IAA5B;AACD,KAlBH;AAmBD,GArBD;;AAuBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,KAAK,CAAC2B,MAAN,GAAe,CAAf,IAAoB3B,KAAK,CAAC4B,GAAN,CAAWjB,IAAD,iBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAL,CAApB,CADvB,eAEE;AAAQ,IAAA,OAAO,EAAEJ,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CADF;AAMD;;AAED,eAAeR,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [blobs, setBlobs] = useState([]);\n\n  useEffect(() => {\n    const fetchBlobs = async () => {\n      const result = await axios(\"/list\");\n      console.log(result.data.blobs);\n      setBlobs(result.data.blobs);\n    };\n    fetchBlobs();\n  }, []);\n\n  const downloadClick = () => {\n    console.log(\"hello\");\n    fetch(\"/download\")\n      // Convert data into a 'blob'.\n      .then((res) => res.blob())\n      .then((blob) => {\n        // Create blob link for download.\n        const url = window.URL.createObjectURL(new Blob([blob]));\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", \"hi.docx\");\n\n        // Append to html page.\n        document.body.appendChild(link);\n\n        // Force download.\n        link.click();\n\n        // Clean up and remove link from dom.\n        link.parentNode.removeChild(link);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      {blobs.length > 0 && blobs.map((blob) => <h2>{blob}</h2>)}\n      <button onClick={downloadClick}>Download File</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}